// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sms.proto

package sms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SMSRequest struct {
	PhoneNumbers         string   `protobuf:"bytes,1,opt,name=PhoneNumbers,proto3" json:"PhoneNumbers,omitempty"`
	TemplateParam        string   `protobuf:"bytes,2,opt,name=TemplateParam,proto3" json:"TemplateParam,omitempty"`
	TemplateCode         string   `protobuf:"bytes,3,opt,name=TemplateCode,proto3" json:"TemplateCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMSRequest) Reset()         { *m = SMSRequest{} }
func (m *SMSRequest) String() string { return proto.CompactTextString(m) }
func (*SMSRequest) ProtoMessage()    {}
func (*SMSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sms_34967c84626e65d6, []int{0}
}
func (m *SMSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMSRequest.Unmarshal(m, b)
}
func (m *SMSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMSRequest.Marshal(b, m, deterministic)
}
func (dst *SMSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSRequest.Merge(dst, src)
}
func (m *SMSRequest) XXX_Size() int {
	return xxx_messageInfo_SMSRequest.Size(m)
}
func (m *SMSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SMSRequest proto.InternalMessageInfo

func (m *SMSRequest) GetPhoneNumbers() string {
	if m != nil {
		return m.PhoneNumbers
	}
	return ""
}

func (m *SMSRequest) GetTemplateParam() string {
	if m != nil {
		return m.TemplateParam
	}
	return ""
}

func (m *SMSRequest) GetTemplateCode() string {
	if m != nil {
		return m.TemplateCode
	}
	return ""
}

type SMSReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMSReply) Reset()         { *m = SMSReply{} }
func (m *SMSReply) String() string { return proto.CompactTextString(m) }
func (*SMSReply) ProtoMessage()    {}
func (*SMSReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_sms_34967c84626e65d6, []int{1}
}
func (m *SMSReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMSReply.Unmarshal(m, b)
}
func (m *SMSReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMSReply.Marshal(b, m, deterministic)
}
func (dst *SMSReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSReply.Merge(dst, src)
}
func (m *SMSReply) XXX_Size() int {
	return xxx_messageInfo_SMSReply.Size(m)
}
func (m *SMSReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSReply.DiscardUnknown(m)
}

var xxx_messageInfo_SMSReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SMSRequest)(nil), "sms.SMSRequest")
	proto.RegisterType((*SMSReply)(nil), "sms.SMSReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SMSClient is the client API for SMS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SMSClient interface {
	SendSms(ctx context.Context, in *SMSRequest, opts ...grpc.CallOption) (*SMSReply, error)
}

type sMSClient struct {
	cc *grpc.ClientConn
}

func NewSMSClient(cc *grpc.ClientConn) SMSClient {
	return &sMSClient{cc}
}

func (c *sMSClient) SendSms(ctx context.Context, in *SMSRequest, opts ...grpc.CallOption) (*SMSReply, error) {
	out := new(SMSReply)
	err := c.cc.Invoke(ctx, "/sms.SMS/SendSms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SMSServer is the server API for SMS service.
type SMSServer interface {
	SendSms(context.Context, *SMSRequest) (*SMSReply, error)
}

func RegisterSMSServer(s *grpc.Server, srv SMSServer) {
	s.RegisterService(&_SMS_serviceDesc, srv)
}

func _SMS_SendSms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SMSServer).SendSms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sms.SMS/SendSms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SMSServer).SendSms(ctx, req.(*SMSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SMS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sms.SMS",
	HandlerType: (*SMSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSms",
			Handler:    _SMS_SendSms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sms.proto",
}

func init() { proto.RegisterFile("sms.proto", fileDescriptor_sms_34967c84626e65d6) }

var fileDescriptor_sms_34967c84626e65d6 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0xce, 0x2d, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0xce, 0x2d, 0x56, 0xaa, 0xe2, 0xe2, 0x0a, 0xf6,
	0x0d, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x52, 0xe2, 0xe2, 0x09, 0xc8, 0xc8, 0xcf,
	0x4b, 0xf5, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0x2a, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42,
	0x11, 0x13, 0x52, 0xe1, 0xe2, 0x0d, 0x49, 0xcd, 0x2d, 0xc8, 0x49, 0x2c, 0x49, 0x0d, 0x48, 0x2c,
	0x4a, 0xcc, 0x95, 0x60, 0x02, 0x2b, 0x42, 0x15, 0x04, 0x99, 0x04, 0x13, 0x70, 0xce, 0x4f, 0x49,
	0x95, 0x60, 0x86, 0x98, 0x84, 0x2c, 0xa6, 0xc4, 0xc5, 0xc5, 0x01, 0xb6, 0xbb, 0x20, 0xa7, 0xd2,
	0xc8, 0x88, 0x8b, 0x39, 0xd8, 0x37, 0x58, 0x48, 0x9b, 0x8b, 0x3d, 0x38, 0x35, 0x2f, 0x25, 0x38,
	0xb7, 0x58, 0x88, 0x5f, 0x0f, 0xe4, 0x54, 0x84, 0xe3, 0xa4, 0x78, 0x11, 0x02, 0x05, 0x39, 0x95,
	0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x7f, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x60, 0x5d, 0x9e,
	0x28, 0xd4, 0x00, 0x00, 0x00,
}
