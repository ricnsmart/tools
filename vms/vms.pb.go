// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vms.proto

package vms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	CalledNumber         string   `protobuf:"bytes,1,opt,name=CalledNumber,proto3" json:"CalledNumber,omitempty"`
	TtsCode              string   `protobuf:"bytes,2,opt,name=TtsCode,proto3" json:"TtsCode,omitempty"`
	TtsParam             string   `protobuf:"bytes,3,opt,name=TtsParam,proto3" json:"TtsParam,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_vms_cc37b7506da28e79, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetCalledNumber() string {
	if m != nil {
		return m.CalledNumber
	}
	return ""
}

func (m *Request) GetTtsCode() string {
	if m != nil {
		return m.TtsCode
	}
	return ""
}

func (m *Request) GetTtsParam() string {
	if m != nil {
		return m.TtsParam
	}
	return ""
}

type Reply struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	CallId               string   `protobuf:"bytes,4,opt,name=CallId,proto3" json:"CallId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_vms_cc37b7506da28e79, []int{1}
}
func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (dst *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(dst, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Reply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Reply) GetCallId() string {
	if m != nil {
		return m.CallId
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "vms.Request")
	proto.RegisterType((*Reply)(nil), "vms.Reply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VMSClient is the client API for VMS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VMSClient interface {
	Call(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type vMSClient struct {
	cc *grpc.ClientConn
}

func NewVMSClient(cc *grpc.ClientConn) VMSClient {
	return &vMSClient{cc}
}

func (c *vMSClient) Call(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/vms.VMS/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VMSServer is the server API for VMS service.
type VMSServer interface {
	Call(context.Context, *Request) (*Reply, error)
}

func RegisterVMSServer(s *grpc.Server, srv VMSServer) {
	s.RegisterService(&_VMS_serviceDesc, srv)
}

func _VMS_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VMSServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vms.VMS/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VMSServer).Call(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _VMS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vms.VMS",
	HandlerType: (*VMSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _VMS_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vms.proto",
}

func init() { proto.RegisterFile("vms.proto", fileDescriptor_vms_cc37b7506da28e79) }

var fileDescriptor_vms_cc37b7506da28e79 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xb1, 0x6e, 0x83, 0x30,
	0x10, 0x86, 0x4b, 0xa1, 0x50, 0x4e, 0x4c, 0x37, 0x54, 0x16, 0xea, 0x50, 0x79, 0x6a, 0x16, 0x86,
	0xe4, 0x11, 0x98, 0x18, 0x88, 0x22, 0x82, 0xb2, 0x9b, 0xd8, 0xca, 0x10, 0x5b, 0x10, 0x6c, 0x90,
	0x78, 0xfb, 0xc8, 0x8e, 0x43, 0x94, 0xcd, 0xdf, 0xff, 0xeb, 0x3e, 0x9d, 0x0f, 0xd2, 0x59, 0xe9,
	0x62, 0x18, 0x7b, 0xd3, 0x63, 0x38, 0x2b, 0x4d, 0xcf, 0x90, 0x34, 0xe2, 0x36, 0x09, 0x6d, 0x90,
	0x42, 0x56, 0x32, 0x29, 0x05, 0xdf, 0x4f, 0xaa, 0x13, 0x23, 0x09, 0xfe, 0x82, 0xff, 0xb4, 0x79,
	0xcb, 0x90, 0x40, 0xd2, 0x1a, 0x5d, 0xf6, 0x5c, 0x90, 0x4f, 0x57, 0x3f, 0x11, 0x73, 0xf8, 0x6e,
	0x8d, 0x3e, 0xb0, 0x91, 0x29, 0x12, 0xba, 0x6a, 0x65, 0x7a, 0x85, 0xaf, 0x46, 0x0c, 0x72, 0x41,
	0x84, 0xc8, 0xcd, 0x3e, 0xd4, 0xee, 0x6d, 0x95, 0xb5, 0xd0, 0x9a, 0x5d, 0x56, 0xa5, 0x47, 0xfc,
	0x85, 0xd4, 0xef, 0x56, 0x71, 0xef, 0x7c, 0x05, 0xf8, 0x03, 0xb1, 0x5d, 0xad, 0xe2, 0x24, 0x72,
	0x95, 0xa7, 0xed, 0x06, 0xc2, 0x53, 0x7d, 0x44, 0x0a, 0x91, 0x0d, 0x30, 0x2b, 0xec, 0x8f, 0xfd,
	0x58, 0x0e, 0x9e, 0x06, 0xb9, 0xd0, 0x8f, 0x2e, 0x76, 0x87, 0xd8, 0xdd, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x8b, 0xcf, 0x5b, 0x89, 0x15, 0x01, 0x00, 0x00,
}
